name: Build, Push, and Deploy Java Docker Image

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build the project using Maven
        run: mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t yassingamalz/binaa-center-backend:latest .
          docker push yassingamalz/binaa-center-backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push  # Only runs after the build_and_push job is complete

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Docker network and volumes via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ORACLE_IP }}
          username: ${{ secrets.ORACLE_USERNAME }}
          key: ${{ secrets.ORACLE_SSH_KEY }}
          script: |
            # Create network if not exists
            docker network inspect binaa-network || docker network create binaa-network
            
            # Create volumes if not exists
            docker volume inspect binaa-mysql-data || docker volume create binaa-mysql-data
            docker volume inspect binaa-logs || docker volume create binaa-logs

      - name: Deploy MySQL Container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ORACLE_IP }}
          username: ${{ secrets.ORACLE_USERNAME }}
          key: ${{ secrets.ORACLE_SSH_KEY }}
          script: |
            # Pull MySQL image
            docker pull mysql:8.0
            
            # Stop and remove existing MySQL container
            docker stop binaa-mysql || true
            docker rm binaa-mysql || true
            
            # Run MySQL container
            docker run -d \
              --name binaa-mysql \
              --network binaa-network \
              --hostname mysql \
              -e MYSQL_DATABASE=binaa_center \
              -e MYSQL_USER=binaa \
              -e MYSQL_PASSWORD=binaa123 \
              -e MYSQL_ROOT_PASSWORD=root \
              -p 3306:3306 \
              -v binaa-mysql-data:/var/lib/mysql \
              --restart unless-stopped \
              mysql:8.0 \
              --character-set-server=utf8mb4 \
              --collation-server=utf8mb4_unicode_ci

      - name: Deploy Backend Service
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ORACLE_IP }}
          username: ${{ secrets.ORACLE_USERNAME }}
          key: ${{ secrets.ORACLE_SSH_KEY }}
          script: |
            # Pull backend image
            docker pull yassingamalz/binaa-center-backend:latest
            
            # Stop and remove existing backend container
            docker stop binaa-center-backend || true
            docker rm binaa-center-backend || true
            
            # Run backend container
            docker run -d \
              --name binaa-center-backend \
              --network binaa-network \
              -p 8080:8080 \
              -v binaa-logs:/app/logs \
              -e SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/binaa_center \
              -e SPRING_DATASOURCE_USERNAME=binaa \
              -e SPRING_DATASOURCE_PASSWORD=binaa123 \
              -e SPRING_PROFILES_ACTIVE=prod \
              --restart unless-stopped \
              yassingamalz/binaa-center-backend:latest

      - name: Cleanup Old Images
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ORACLE_IP }}
          username: ${{ secrets.ORACLE_USERNAME }}
          key: ${{ secrets.ORACLE_SSH_KEY }}
          script: |
            # Remove dangling images
            docker image prune -f